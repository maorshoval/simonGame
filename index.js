// Array to store the possible button colors
var buttonColours = ["red", "blue", "green", "yellow"];
// Array to store the sequence generated by the game
var gamePattern = [];
// Array to store the sequence clicked by the user
var userClickedPattern = [];
// Variable to keep track of the current level
var level = 0;
// Variable to check if the game has started
var started = false;

// Function to generate the next sequence in the game
function nextSequence() {
    // Reset the user clicked pattern for the new level
    userClickedPattern = [];
    // Increment the level
    level++;
    // Update the level title
    $("#level-title").text("Level " + level);

    // Generate a random number between 0 and 3
    var randomNumber = Math.floor(Math.random() * 4);
    // Select a random color from the buttonColours array
    var randomChosenColour = buttonColours[randomNumber];
    // Add the randomly chosen color to the game pattern
    gamePattern.push(randomChosenColour);
    // Animate the selected button
    $("#" + randomChosenColour).fadeIn(100).fadeOut(100).fadeIn(100);
    // Play the sound for the selected button
    playSound(randomChosenColour);
}

function startGame() {
    if (!started) {
      $("#level-title").text("Level " + level);
      nextSequence();
      started = true;
    }
  }

$(document).keydown(startGame);

// Start the game on clicking the title
$("#level-title").click(startGame);


// Event listener for keydown to start the game
$(document).keydown(function() {
    if (!started) {
        // Update the level title
        $("#level-title").text("Level " + level);
        // Generate the first sequence
        nextSequence();
        // Set the game started flag to true
        started = true;
    }
});

// Event listener for button clicks
$(".btn").click(function () {
    // Get the ID of the clicked button
    var userChosenColour = $(this).attr('id');
    // Add the clicked color to the user clicked pattern
    userClickedPattern.push(userChosenColour);
    
    // Play the sound for the clicked button
    playSound(userChosenColour);
    // Animate the button press
    animatePress(userChosenColour);

    // Check the user's answer
    checkAnswer(userClickedPattern.length - 1);
})

// Function to play sound based on button color
function playSound(name) {
    var audio = new Audio("sounds/" + name + ".mp3");
    audio.play();
}

// Function to animate button press
function animatePress(currentColour) {
    $("." + currentColour).addClass("pressed");
    setTimeout(function() {
        $("." + currentColour).removeClass("pressed");
    }, 100);
}

// Function to check the user's answer
function checkAnswer(currentLevel) {
    // Check if the user's answer matches the game pattern
    if (gamePattern[currentLevel] === userClickedPattern[currentLevel]) {
        console.log("success");

        // If the user has completed the current sequence
        if (userClickedPattern.length === gamePattern.length) {
            // Generate the next sequence after a delay
            setTimeout(function() {
                nextSequence();
            }, 1000);
        }
    } else {
        console.log("wrong");
        playSound("wrong");
        // Add the game-over class to the body
        $("body").addClass("game-over");
        // Remove the game-over class after 200ms
        setTimeout(function() {
            $("body").removeClass("game-over");
        }, 200);

        // Update the level title to show game over message
        $("#level-title").text("Game Over, Press Any Key to Restart");
        // Restart the game
        startOver();
    }
}

// Function to restart the game
function startOver() {
    level = 0;
    gamePattern = [];
    started = false;
}
